Section 7
___________
* The content is the one that guides the design of the project and not the opposite.
* don't come with a cool design and then find content to fill it.
* 1. write the content.

* in the css file, it is recommended that we put a system of the used fonts, sizes and 
  line heights to reference them in future uses.
  
  To keep the style consistent.
* The responsive element of the website is planned from the start.

* When a page is loaded, all relative units are converted to pixels.
* rem: root elementfont size, which is the default font-size that is specified by the root element (html element).

* to specify the user-defined rem value, we simply change the font size in the html element.
* we should use a percentage for that. eg. 16px -> 10px ---> 10 / 16 = 62.5%.
* max-width instead of width, to make the element shrink if the browser becomes smaller.

* if we set the hero section width to 100%, then it will grow as the window grows, but if width were set
  as pixels, then the element will shrink if the window shrinks.
  but a max-width is the best of both worlds.

* anchors are inline element, so top and bottom margins and padding do not work.
* border radius should be made by pixels.

* sometimes when we add border to an element, it plays with the layout, that's because
  the border is on the outside.

  to make the border inside, we will use the box-shadow trick and set it to inset.
* add the shared styles in the shared class.

* the transition is put in the steady state rule.
  it can have values that describes what properties will change, and the time.

* helper class, a class we put to multiple elements that share the same property.
  we should annotate it with the !important.

* to make the pictures overlap, we don't simply use a negative gap value for the 
  flex container, we use a margin of negative value.

* main element is used for sctions that are only used once in a website,
  so a navigation bar doesn't make sense if it is in a main.

* when making sticky elements, it is better to give it a fixed height.
* to add a nav bar, we simply add a component wherever we like, just add it 
  as a seperate section, not included in other.

* a nav bar is done this way, ul inside the nav, this unordered list contains 
  li that contains a.
* if the color is a text, then we check the contrast checker.
* a good practice is to keep track of the values you used in css, so that 
  the consistency of the website is fulfiled.

* a convention is used for wep pages width is 1200 or 1140px.
* hero sections are usually wider than the rest of the sections.

* a reusable rule: the idea is to extract a duplicated styles from different 
  rules into a single rule that can be applied to an element if the specific 
  styles are wanted on that element.

* height of a before or after element using percentages doesn't work, we use 
  a trick of padding-bottom as the height property.

* justify-content : space-around; also adds space to the start and end of 
  a flex item.

* filter property has a lot of functionalities.
* overflow property, basically defines what will happen when overflow occures.

* make sure in cards for the images to have the same aspect ratio.

* it isn't a good practice if we added more styles to our reusable classes.
* adding a border to anchor instead of the text decoration looks better.

* currentColor keyword is a variable that has the value of the current test color.
  if the text color changes, so will the currentColor.

* when we want to remove a border, if we set it to null, the layout may change a little,
  we use the transparent color keyword to basically set it as display none.

* we don't want to make the customer photos relative so they wouldn't get too big and worse quality.
* figcaption is only allowed in figures, figures are the best 

* there is white spaces around images because they are inline elements.
* similar elements, it is better for the number of lines to be somewhat the same.

* fr idea, we could think of them as percentages, to allow for more precise sizing for columns.
* big text usually aren't too bold.

* the cards in the pricing sections are block level elements, therefore they occupy the entire
  avalible width.

* the :not pseudo class can take other pseudo classes as argument to reverse the logic.
* .grid:last-child, is applied to any element with the class grid, who happens to be the last child.

* the ionicons use the default box model.

* font-size: 1.8rem for main text.

* we added the grid class to the pricing-info to give it the same margin as the frid.
* we appened the margin-bottom-md class to the pricing-plans to override the already defined margin bottom.